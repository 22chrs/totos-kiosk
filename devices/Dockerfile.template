# Dockerfile (devices)

#ToDo: Websocket usecontext -> 1. u 2.client je nach context  

# Python base image
#FROM balenalib/generic-amd64-debian-python:3.11.2-bullseye-run


ARG PYTHON_VERSION="3.11.2"
ARG DEBIAN_VERSION="bookworm"
FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-python:${PYTHON_VERSION}-${DEBIAN_VERSION}-run
#FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-python:${PYTHON_VERSION}-${DEBIAN_VERSION}-build

WORKDIR /opt/

# This will copy all files in our root to the working directory in the container
COPY . .

# Setting up a Python virtual environment
RUN python3 -m venv /opt/venv

# Activating the virtual environment
ENV PATH="/opt/venv/bin:$PATH"

# Install the dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1
ENV RUNNING_IN_DOCKER=true

# Ensure start.sh is executable
RUN chmod +x /opt/start.sh

# main.py will be started by start.sh when container starts up on the device
CMD ["/opt/start.sh"]